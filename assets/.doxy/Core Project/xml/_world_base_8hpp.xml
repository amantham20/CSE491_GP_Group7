<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_world_base_8hpp" kind="file" language="C++">
    <compoundname>WorldBase.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cassert</includes>
    <includes local="no">memory</includes>
    <includes local="no">queue</includes>
    <includes local="no">random</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">../DataCollection/AgentReciever.hpp</includes>
    <includes refid="_agent_base_8hpp" local="yes">AgentBase.hpp</includes>
    <includes refid="_data_8hpp" local="yes">Data.hpp</includes>
    <includes local="yes">DataCollection/DataManager.hpp</includes>
    <includes local="yes">Interfaces/NetWorth/client/ClientInterface.hpp</includes>
    <includes local="yes">Interfaces/NetWorth/client/ClientManager.hpp</includes>
    <includes local="yes">Interfaces/NetWorth/client/ControlledAgent.hpp</includes>
    <includes local="yes">Interfaces/NetWorth/server/ServerManager.hpp</includes>
    <includes refid="_item_base_8hpp" local="yes">ItemBase.hpp</includes>
    <includes refid="_world_grid_8hpp" local="yes">WorldGrid.hpp</includes>
    <includedby refid="_entity_8cpp" local="yes">source/core/Entity.cpp</includedby>
    <incdepgraph>
      <node id="14">
        <label>../DataCollection/AgentData.hpp</label>
      </node>
      <node id="10">
        <label>../DataCollection/AgentReciever.hpp</label>
      </node>
      <node id="11">
        <label>AgentBase.hpp</label>
        <link refid="_agent_base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>CoreObject.hpp</label>
        <link refid="_core_object_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Data.hpp</label>
        <link refid="_data_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Entity.hpp</label>
        <link refid="_entity_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>GridPosition.hpp</label>
        <link refid="_grid_position_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ItemBase.hpp</label>
        <link refid="_item_base_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Property.hpp</label>
        <link refid="_property_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Serialize.hpp</label>
        <link refid="_serialize_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>source/core/WorldBase.hpp</label>
        <link refid="_world_base_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>WorldGrid.hpp</label>
        <link refid="_world_grid_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>DataCollection/DataManager.hpp</label>
      </node>
      <node id="33">
        <label>Interfaces/NetWorth/client/ClientInterface.hpp</label>
      </node>
      <node id="34">
        <label>Interfaces/NetWorth/client/ClientManager.hpp</label>
      </node>
      <node id="35">
        <label>Interfaces/NetWorth/client/ControlledAgent.hpp</label>
      </node>
      <node id="36">
        <label>Interfaces/NetWorth/server/ServerManager.hpp</label>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="28">
        <label>compare</label>
      </node>
      <node id="29">
        <label>cstddef</label>
      </node>
      <node id="22">
        <label>fstream</label>
      </node>
      <node id="23">
        <label>functional</label>
      </node>
      <node id="24">
        <label>iostream</label>
      </node>
      <node id="19">
        <label>istream</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="20">
        <label>ostream</label>
      </node>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="6">
        <label>random</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="12">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classcse491_1_1_world_base" prot="public">cse491::WorldBase</innerclass>
    <innernamespace refid="namespaceworldlang">worldlang</innernamespace>
    <innernamespace refid="namespacecse491">cse491</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../DataCollection/AgentReciever.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AgentBase.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DataCollection/DataManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Interfaces/NetWorth/client/ClientInterface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Interfaces/NetWorth/client/ClientManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Interfaces/NetWorth/client/ControlledAgent.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Interfaces/NetWorth/server/ServerManager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ItemBase.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WorldGrid.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespaceworldlang" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceworldlang" kindref="compound">worldlang</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ProgramExecutor;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecse491" kindref="compound">cse491</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataReceiver;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classcse491_1_1_world_base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcse491_1_1_world_base" kindref="compound">WorldBase</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>npos<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>netWorth::ServerManager<sp/>*server_manager<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="classcse491_1_1_world_base_1a50c80f253c7b6bc079d6712aa2b13830" refkind="member"><highlight class="normal"><sp/><sp/>netWorth::ClientManager<sp/>*<ref refid="classcse491_1_1_world_base_1a50c80f253c7b6bc079d6712aa2b13830" kindref="member">client_manager</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classcse491_1_1_world_base_1a30c02326a1310cd81249fccb60870eaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a30c02326a1310cd81249fccb60870eaa" kindref="member">ConfigAgent</ref>(<ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>agent<sp/>*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classcse491_1_1_world_base_1ad35be9dde4e9125cb473a9864984f7cf" refkind="member"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;size_t,<sp/>WorldGrid&gt;<sp/><ref refid="classcse491_1_1_world_base_1ad35be9dde4e9125cb473a9864984f7cf" kindref="member">grids</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_grid" kindref="compound">WorldGrid</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecse491_1a1fe0ebd63f5648a7598fcc0c89544ccc" kindref="member">type_options_t</ref><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecse491_1a275795f59edd15aeb303e92d7488ebfa" kindref="member">item_map_t</ref><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacecse491_1a4d00708c07d0a0de86796a44dd8bfa6a" kindref="member">agent_map_t</ref><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="classcse491_1_1_world_base_1a82507b011268f58d782a934312de1a99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a82507b011268f58d782a934312de1a99" kindref="member">world_running</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classcse491_1_1_world_base_1a057699cf114942bd42087102f39351f4" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classcse491_1_1_world_base_1a057699cf114942bd42087102f39351f4" kindref="member">action</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;DataCollection::AgentReceiver&gt;<sp/>agent_receiver;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="classcse491_1_1_world_base_1a379277d561b904f7431bdde244dbe39d" refkind="member"><highlight class="normal"><sp/><sp/>std::mt19937<sp/><ref refid="classcse491_1_1_world_base_1a379277d561b904f7431bdde244dbe39d" kindref="member">random_gen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="classcse491_1_1_world_base_1ab53a71a5304002f51e0f641af12dc90e" refkind="member"><highlight class="normal"><sp/><sp/>std::uniform_real_distribution&lt;&gt;<sp/><ref refid="classcse491_1_1_world_base_1ab53a71a5304002f51e0f641af12dc90e" kindref="member">uni_dist</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="classcse491_1_1_world_base_1af33aebd9806456b8680afbf3372e0239" refkind="member"><highlight class="normal"><sp/><sp/>std::normal_distribution&lt;&gt;<sp/><ref refid="classcse491_1_1_world_base_1af33aebd9806456b8680afbf3372e0239" kindref="member">norm_dist</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classcse491_1_1_world_base_1a9c8cc7704cdd35ea862e35c8e57ff8ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a9c8cc7704cdd35ea862e35c8e57ff8ab" kindref="member">NextEntityID</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>++<ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref>;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classcse491_1_1_world_base_1acdea49068c94d472be824c95f139acf3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1acdea49068c94d472be824c95f139acf3" kindref="member">ConfigAgent</ref>(<ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>agent<sp/>*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classcse491_1_1_world_base_1ab11fd38e99219a28df2795cafbf15159" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ab11fd38e99219a28df2795cafbf15159" kindref="member">AddCellType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;desc<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>.push_back(<ref refid="structcse491_1_1_cell_type" kindref="compound">CellType</ref>{name,<sp/>desc,<sp/>symbol});</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classcse491_1_1_world_base_1a765d06683a9c57c817bad794162bfc4f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_base_1a765d06683a9c57c817bad794162bfc4f" kindref="member">WorldBase</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref><sp/>=<sp/>0)<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1ad35be9dde4e9125cb473a9864984f7cf" kindref="member">grids</ref>(),<sp/><ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>(<ref refid="classcse491_1_1_world_base_1ad35be9dde4e9125cb473a9864984f7cf" kindref="member">grids</ref>[0]),<sp/><ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref>(<ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>cell<sp/>type<sp/>(ID<sp/>0)<sp/>should<sp/>be<sp/>reserved<sp/>for<sp/>errors<sp/>or<sp/>empty<sp/>spots<sp/>in<sp/>a<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1ab11fd38e99219a28df2795cafbf15159" kindref="member">AddCellType</ref>(</highlight><highlight class="stringliteral">&quot;Unknown&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>an<sp/>invalid<sp/>cell<sp/>type<sp/>and<sp/>should<sp/>not<sp/>be<sp/>reachable.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::random_device<sp/>rd;<sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>expensive<sp/>&quot;true&quot;<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref><sp/>=<sp/>rd();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>seed<sp/>to<sp/>a<sp/>random<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a379277d561b904f7431bdde244dbe39d" kindref="member">random_gen</ref>.seed(<ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base" kindref="compound">~WorldBase</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>.clear();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Accessors<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classcse491_1_1_world_base_1ad5a41d3ffe157a9280f59b6fd335e6d7" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ad5a41d3ffe157a9280f59b6fd335e6d7" kindref="member">GetNumItems</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classcse491_1_1_world_base_1a7288055da3e261d7a9b384c47190826c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a7288055da3e261d7a9b384c47190826c" kindref="member">GetNumAgents</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classcse491_1_1_world_base_1a4941a720636380ff1b2230c44e16236c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a4941a720636380ff1b2230c44e16236c" kindref="member">HasItem</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>.count(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classcse491_1_1_world_base_1a4b0d7b551a78ea056ff4b7953427be3b" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a4b0d7b551a78ea056ff4b7953427be3b" kindref="member">HasAgent</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>.count(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classcse491_1_1_world_base_1a70deeab345ebf73a8c4f86d06fd4a8f7" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="classcse491_1_1_item_base" kindref="compound">ItemBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a70deeab345ebf73a8c4f86d06fd4a8f7" kindref="member">GetItem</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classcse491_1_1_world_base_1a4941a720636380ff1b2230c44e16236c" kindref="member">HasItem</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>[id];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classcse491_1_1_world_base_1a363d2fc8ba1d692f54740e68c98d3c27" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/><ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a363d2fc8ba1d692f54740e68c98d3c27" kindref="member">GetAgent</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="classcse491_1_1_world_base_1a4b0d7b551a78ea056ff4b7953427be3b" kindref="member">HasAgent</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>[id];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classcse491_1_1_world_base_1a5ea1165d8df767fe15a35b9e93736150" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a5ea1165d8df767fe15a35b9e93736150" kindref="member">GetItemID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr-&gt;GetName()<sp/>==<sp/>name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>npos;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classcse491_1_1_world_base_1ab6970f095fb60e0bc66ba0c06fa0f4f1" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ab6970f095fb60e0bc66ba0c06fa0f4f1" kindref="member">GetAgentID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr-&gt;GetName()<sp/>==<sp/>name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>npos;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classcse491_1_1_world_base_1a214c2efc8296e32909fe590dd9b38f9b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_grid" kindref="compound">WorldGrid</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a214c2efc8296e32909fe590dd9b38f9b" kindref="member">GetGrid</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>;<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_grid" kindref="compound">WorldGrid</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a214c2efc8296e32909fe590dd9b38f9b" kindref="member">GetGrid</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ad35be9dde4e9125cb473a9864984f7cf" kindref="member">grids</ref>[grid_id];<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classcse491_1_1_world_base_1aded59564d46c4db7f2a0b8471742ade4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_grid" kindref="compound">WorldGrid</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1aded59564d46c4db7f2a0b8471742ade4" kindref="member">GetGrid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>;<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_grid" kindref="compound">WorldGrid</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a214c2efc8296e32909fe590dd9b38f9b" kindref="member">GetGrid</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ad35be9dde4e9125cb473a9864984f7cf" kindref="member">grids</ref>.at(grid_id);<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classcse491_1_1_world_base_1a070d49184a7f98e6b9a223d96de81cb6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a070d49184a7f98e6b9a223d96de81cb6" kindref="member">GetRunOver</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref>;<sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Random<sp/>Number<sp/>Generation<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classcse491_1_1_world_base_1a79d4664ed86dd90c0bb076235ad1c681" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a79d4664ed86dd90c0bb076235ad1c681" kindref="member">GetSeed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ae21f357c223957d36046a0d71cc6aed7" kindref="member">seed</ref>;<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classcse491_1_1_world_base_1aae5aa0b4384c8fabd4cc2aaceea6e054" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aae5aa0b4384c8fabd4cc2aaceea6e054" kindref="member">GetRandom</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ab53a71a5304002f51e0f641af12dc90e" kindref="member">uni_dist</ref>(<ref refid="classcse491_1_1_world_base_1a379277d561b904f7431bdde244dbe39d" kindref="member">random_gen</ref>);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classcse491_1_1_world_base_1a501be400a4e22b588836fc786d93364a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a501be400a4e22b588836fc786d93364a" kindref="member">GetRandom</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a501be400a4e22b588836fc786d93364a" kindref="member">GetRandom</ref>()<sp/>*<sp/>max;<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classcse491_1_1_world_base_1aa064376e81c66f46007f507559024320" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aa064376e81c66f46007f507559024320" kindref="member">GetRandom</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(max<sp/>&gt;<sp/>min);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min<sp/>+<sp/><ref refid="classcse491_1_1_world_base_1aae5aa0b4384c8fabd4cc2aaceea6e054" kindref="member">GetRandom</ref>(max<sp/>-<sp/>min);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classcse491_1_1_world_base_1a20860da23777f250442fa2121f1b865b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a20860da23777f250442fa2121f1b865b" kindref="member">GetRandomNormal</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1af33aebd9806456b8680afbf3372e0239" kindref="member">norm_dist</ref>(<ref refid="classcse491_1_1_world_base_1a379277d561b904f7431bdde244dbe39d" kindref="member">random_gen</ref>);<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classcse491_1_1_world_base_1aed3e9b4f642356f63522fe908ec775a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aed3e9b4f642356f63522fe908ec775a7" kindref="member">GetRandomNormal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sd<sp/>=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(sd<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mean<sp/>+<sp/><ref refid="classcse491_1_1_world_base_1af33aebd9806456b8680afbf3372e0239" kindref="member">norm_dist</ref>(<ref refid="classcse491_1_1_world_base_1a379277d561b904f7431bdde244dbe39d" kindref="member">random_gen</ref>)<sp/>*<sp/>sd;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Agent<sp/>Management<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classcse491_1_1_world_base_1ae523f1072b65729dcfbad2f08fc0c0e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1ae523f1072b65729dcfbad2f08fc0c0e5" kindref="member">AddConfiguredAgent</ref>(std::unique_ptr&lt;AgentBase&gt;<sp/>agent_ptr)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>agent_map_lock;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_map_lock.lock();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetWorld(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_ptr-&gt;Initialize()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>agent<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>agent_ptr-&gt;GetName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<sp/>agentReturn<sp/>=<sp/>*<ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>[agent_ptr-&gt;GetID()];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>[agent_ptr-&gt;GetID()]<sp/>=<sp/>std::move(agent_ptr);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_map_lock.unlock();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agentReturn;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AGENT_T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>PROPERTY_Ts&gt;</highlight></codeline>
<codeline lineno="217" refid="classcse491_1_1_world_base_1a29624d90a61802f19a2348ed1a4eedc1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a29624d90a61802f19a2348ed1a4eedc1" kindref="member">AddAgent</ref>(std::string<sp/>agent_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">,<sp/>PROPERTY_Ts...<sp/>properties)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>agent_map_lock;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_map_lock.lock();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>agent_id<sp/>=<sp/><ref refid="classcse491_1_1_world_base_1a9c8cc7704cdd35ea862e35c8e57ff8ab" kindref="member">NextEntityID</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>agent_ptr<sp/>=<sp/>std::make_unique&lt;AGENT_T&gt;(agent_id,<sp/>agent_name);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetWorld(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetProperties(std::forward&lt;PROPERTY_Ts&gt;(properties)...);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a30c02326a1310cd81249fccb60870eaa" kindref="member">ConfigAgent</ref>(*agent_ptr);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_ptr-&gt;Initialize()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>agent<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>agent_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>[agent_id]<sp/>=<sp/>std::move(agent_ptr);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;agentReturn<sp/>=<sp/>*<ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>[agent_id];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_map_lock.unlock();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agentReturn;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classcse491_1_1_world_base_1abc0be5fcd4b2ad17b9ca8ada6274a6f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_item_base" kindref="compound">ItemBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1abc0be5fcd4b2ad17b9ca8ada6274a6f6" kindref="member">AddItem</ref>(std::unique_ptr&lt;ItemBase&gt;<sp/>item_ptr)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(item_ptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>item_ptr<sp/>must<sp/>not<sp/>be<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(item_ptr-&gt;GetID()<sp/>!=<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>item_ptr<sp/>must<sp/>have<sp/>had<sp/>a<sp/>non-zero<sp/>ID<sp/>assigned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>item_ptr-&gt;SetWorld(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item_id<sp/>=<sp/>item_ptr-&gt;GetID();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>[item_id]<sp/>=<sp/>std::move(item_ptr);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>[item_id];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ITEM_T<sp/>=<sp/><ref refid="classcse491_1_1_item_base" kindref="compound">ItemBase</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>PROPERTY_Ts&gt;</highlight></codeline>
<codeline lineno="251" refid="classcse491_1_1_world_base_1a3ba72f95c35abbbae9b836caf89fe77f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_item_base" kindref="compound">ItemBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a3ba72f95c35abbbae9b836caf89fe77f" kindref="member">AddItem</ref>(std::string<sp/>item_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">,<sp/>PROPERTY_Ts...<sp/>properties)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>item_ptr<sp/>=<sp/>std::make_unique&lt;ITEM_T&gt;(<ref refid="classcse491_1_1_world_base_1a9c8cc7704cdd35ea862e35c8e57ff8ab" kindref="member">NextEntityID</ref>(),<sp/>item_name);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>item_ptr-&gt;SetProperties(std::forward&lt;PROPERTY_Ts&gt;(properties)...);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1abc0be5fcd4b2ad17b9ca8ada6274a6f6" kindref="member">AddItem</ref>(std::move(item_ptr));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classcse491_1_1_world_base_1a5ff2b46b4586824dee34f8487c9d74dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_base" kindref="compound">WorldBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a5ff2b46b4586824dee34f8487c9d74dc" kindref="member">RemoveAgent</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>agent_id)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>.erase(agent_id);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classcse491_1_1_world_base_1aa15b404a145e317fdf218be50b1f4e59" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_base" kindref="compound">WorldBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1aa15b404a145e317fdf218be50b1f4e59" kindref="member">RemoveItem</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item_id)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>.erase(item_id);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classcse491_1_1_world_base_1a502e00ae296c8c1b942b7e101b4e5d89" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_base" kindref="compound">WorldBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1a502e00ae296c8c1b942b7e101b4e5d89" kindref="member">RemoveAgent</ref>(std::string<sp/>agent_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(agent_name<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>remove<sp/>interfaces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a5ff2b46b4586824dee34f8487c9d74dc" kindref="member">RemoveAgent</ref>(<ref refid="classcse491_1_1_world_base_1ab6970f095fb60e0bc66ba0c06fa0f4f1" kindref="member">GetAgentID</ref>(agent_name));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classcse491_1_1_world_base_1af499ff1070d2131eb2fd781a4ab86c3c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_base" kindref="compound">WorldBase</ref><sp/>&amp;<ref refid="classcse491_1_1_world_base_1af499ff1070d2131eb2fd781a4ab86c3c" kindref="member">RemoveItem</ref>(std::string<sp/>item_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1af499ff1070d2131eb2fd781a4ab86c3c" kindref="member">RemoveItem</ref>(<ref refid="classcse491_1_1_world_base_1a5ea1165d8df767fe15a35b9e93736150" kindref="member">GetItemID</ref>(item_name));<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="classcse491_1_1_world_base" kindref="compound">WorldBase</ref><sp/>&amp;AddItemToGrid(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item_id,<sp/><ref refid="classcse491_1_1_grid_position" kindref="compound">GridPosition</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>[item_id]-&gt;SetPosition(pos,<sp/>grid_id);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Action<sp/>Management<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classcse491_1_1_world_base_1aeffa77194a20c75474ca3bff22b48f3a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aeffa77194a20c75474ca3bff22b48f3a" kindref="member">DoAction</ref>(<ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;agent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>action_id)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classcse491_1_1_world_base_1aefdce156972421919dd8b3b2bcafe838" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aefdce156972421919dd8b3b2bcafe838" kindref="member">RunAgents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>action_id<sp/>=<sp/>agent_ptr-&gt;SelectAction(<ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>,<sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>,<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>,<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;storeActionMap(agent_ptr-&gt;GetName());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classcse491_1_1_world_base_1aeffa77194a20c75474ca3bff22b48f3a" kindref="member">DoAction</ref>(*agent_ptr,<sp/>action_id);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetActionResult(result);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classcse491_1_1_world_base_1aac25240a59fbbc1fb9d4dc5db7f4af55" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aac25240a59fbbc1fb9d4dc5db7f4af55" kindref="member">RunClientAgents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>action_id<sp/>=<sp/>agent_ptr-&gt;SelectAction(<ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>,<sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>,<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>,<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;storeActionMap(agent_ptr-&gt;GetName());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classcse491_1_1_world_base_1aeffa77194a20c75474ca3bff22b48f3a" kindref="member">DoAction</ref>(*agent_ptr,<sp/>action_id);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetActionResult(result);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deserialize<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>data<sp/>=<sp/><ref refid="classcse491_1_1_world_base_1a50c80f253c7b6bc079d6712aa2b13830" kindref="member">client_manager</ref>-&gt;getSerializedAgents();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.substr(0,<sp/>18)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;:::START<sp/>agent_set&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>is(data);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aa6c7b1fa955f624e73ef547e35e1c484" kindref="member">DeserializeAgentSet</ref>(is,<sp/><ref refid="classcse491_1_1_world_base_1a50c80f253c7b6bc079d6712aa2b13830" kindref="member">client_manager</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classcse491_1_1_world_base_1a79ede3a4a770b52ee2aad452776a5704" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a79ede3a4a770b52ee2aad452776a5704" kindref="member">RunServerAgents</ref>()<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;size_t&gt;<sp/>to_delete;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>until<sp/>clients<sp/>have<sp/>connected<sp/>to<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!server_manager-&gt;hasAgentsPresent()<sp/>||<sp/>!<ref refid="classcse491_1_1_world_base_1a82507b011268f58d782a934312de1a99" kindref="member">world_running</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>action<sp/>and<sp/>send<sp/>to<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>action_id<sp/>=<sp/>agent_ptr-&gt;SelectAction(<ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>,<sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>,<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>,<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>server_manager-&gt;writeToActionMap(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>action_id);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;storeActionMap(agent_ptr-&gt;GetName());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classcse491_1_1_world_base_1aeffa77194a20c75474ca3bff22b48f3a" kindref="member">DoAction</ref>(*agent_ptr,<sp/>action_id);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetActionResult(result);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>agent<sp/>for<sp/>deletion<sp/>if<sp/>client<sp/>disconnects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action_id<sp/>==<sp/>9999)<sp/>to_delete.insert(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>:<sp/>to_delete)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a5ff2b46b4586824dee34f8487c9d74dc" kindref="member">RemoveAgent</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>updates<sp/>to<sp/>client<sp/>for<sp/>deleted<sp/>agents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!to_delete.empty())<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a70149f5d06ab7cce560a1a26e2020c81" kindref="member">SerializeAgentSet</ref>(os);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>data<sp/>=<sp/>os.str();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>server_manager-&gt;setSerializedAgents(data);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>server_manager-&gt;setNewAgent(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>server_manager-&gt;sendGameUpdates();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CollectData()<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DataCollection::DataManager::GetInstance().GetAgentReceiver().StoreData(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;GetName(),<sp/>agent_ptr-&gt;GetPosition(),<sp/>agent_ptr-&gt;GetActionResult());</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="classcse491_1_1_world_base_1afa055ff2a75cefc13af2e67bfaa1daed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1afa055ff2a75cefc13af2e67bfaa1daed" kindref="member">UpdateWorld</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="classcse491_1_1_world_base_1ae468c1feb28eb3650062bd36b81a4dc4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ae468c1feb28eb3650062bd36b81a4dc4" kindref="member">Run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref>)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aefdce156972421919dd8b3b2bcafe838" kindref="member">RunAgents</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CollectData();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1afa055ff2a75cefc13af2e67bfaa1daed" kindref="member">UpdateWorld</ref>();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="classcse491_1_1_world_base_1a2a594c2855d2a75dc03b28994980942d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2a594c2855d2a75dc03b28994980942d" kindref="member">RunClient</ref>(netWorth::ClientManager<sp/>*manager)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a50c80f253c7b6bc079d6712aa2b13830" kindref="member">client_manager</ref><sp/>=<sp/>manager;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref>)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcse491_1_1_world_base_1a82507b011268f58d782a934312de1a99" kindref="member">world_running</ref>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aac25240a59fbbc1fb9d4dc5db7f4af55" kindref="member">RunClientAgents</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CollectData();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1afa055ff2a75cefc13af2e67bfaa1daed" kindref="member">UpdateWorld</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classcse491_1_1_world_base_1ad21a3b2a3142bcd12193ac203f26b823" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ad21a3b2a3142bcd12193ac203f26b823" kindref="member">RunServer</ref>(netWorth::ServerManager<sp/>*manager)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>server_manager<sp/>=<sp/>manager;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classcse491_1_1_world_base_1aff35f724eb8f02b1a774ef2b9648dcb1" kindref="member">run_over</ref>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcse491_1_1_world_base_1a82507b011268f58d782a934312de1a99" kindref="member">world_running</ref>)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a79ede3a4a770b52ee2aad452776a5704" kindref="member">RunServerAgents</ref>();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CollectData();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1afa055ff2a75cefc13af2e67bfaa1daed" kindref="member">UpdateWorld</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classcse491_1_1_world_base_1a854be1266a6f2d5d00680ace6ad10d77" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a854be1266a6f2d5d00680ace6ad10d77" kindref="member">SetWorldRunning</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>running)<sp/>{<sp/><ref refid="classcse491_1_1_world_base_1a82507b011268f58d782a934312de1a99" kindref="member">world_running</ref><sp/>=<sp/>running;<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CellType<sp/>management.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>const<sp/>vector<sp/>of<sp/>all<sp/>of<sp/>the<sp/>possible<sp/>cell<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecse491_1a1fe0ebd63f5648a7598fcc0c89544ccc" kindref="member">type_options_t</ref><sp/>&amp;GetCellTypes()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>;<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="classcse491_1_1_world_base_1af4d3959da2ad73c22a787e84b916df45" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1af4d3959da2ad73c22a787e84b916df45" kindref="member">GetCellTypeID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>[i].name<sp/>==<sp/>name)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;GetCellTypeName(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>[0].name;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>[id].name;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>GetCellTypeSymbol(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>.size())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>[0].symbol;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a2f5b66a21ad6da1be1ac6646c980660b" kindref="member">type_options</ref>[id].symbol;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Grid<sp/>Analysis<sp/>Helpers<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classcse491_1_1_world_base_1a4033758352412d34902611b214f64245" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/><ref refid="classcse491_1_1_world_base_1a4033758352412d34902611b214f64245" kindref="member">FindItemsAt</ref>(<ref refid="classcse491_1_1_grid_position" kindref="compound">GridPosition</ref><sp/>pos,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>item_ids;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>item_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item_ptr-&gt;IsOnGrid(grid_id)<sp/>&amp;&amp;<sp/>item_ptr-&gt;GetPosition()<sp/>==<sp/>pos)<sp/>item_ids.push_back(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item_ids;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="classcse491_1_1_world_base_1a559aa7a4fd8174c401e1f1b96155bbff" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/><ref refid="classcse491_1_1_world_base_1a559aa7a4fd8174c401e1f1b96155bbff" kindref="member">FindAgentsAt</ref>(<ref refid="classcse491_1_1_grid_position" kindref="compound">GridPosition</ref><sp/>pos,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>agent_ids;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_ptr-&gt;IsOnGrid(grid_id)<sp/>&amp;&amp;<sp/>agent_ptr-&gt;GetPosition()<sp/>==<sp/>pos)<sp/>agent_ids.push_back(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agent_ids;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classcse491_1_1_world_base_1a97625a486b3caa75aaf0e1796ad9c2e1" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/><ref refid="classcse491_1_1_world_base_1a97625a486b3caa75aaf0e1796ad9c2e1" kindref="member">FindItemsNear</ref>(<ref refid="classcse491_1_1_grid_position" kindref="compound">GridPosition</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>item_ids;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>item_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item_ptr-&gt;IsOnGrid(grid_id)<sp/>&amp;&amp;<sp/>item_ptr-&gt;GetPosition().IsNear(pos,<sp/>dist))<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item_ids.push_back(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item_ids;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="classcse491_1_1_world_base_1ac4ca15c583f8687bcd01958e2b935e58" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;<sp/><ref refid="classcse491_1_1_world_base_1ac4ca15c583f8687bcd01958e2b935e58" kindref="member">FindAgentsNear</ref>(<ref refid="classcse491_1_1_grid_position" kindref="compound">GridPosition</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>grid_id<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>agent_ids;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_ptr-&gt;IsOnGrid(grid_id)<sp/>&amp;&amp;<sp/>agent_ptr-&gt;GetPosition().IsNear(pos,<sp/>dist))<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_ids.push_back(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>agent_ids;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="classcse491_1_1_world_base_1ae0aafe79a49dcb3671fa463cbfe7c4f0" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1ae0aafe79a49dcb3671fa463cbfe7c4f0" kindref="member">IsTraversable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_agent_base" kindref="compound">AgentBase</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*agent*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_grid_position" kindref="compound">cse491::GridPosition</ref><sp/></highlight><highlight class="comment">/*pos*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/>Network<sp/>Serialization<sp/>and<sp/>Deserialization<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classcse491_1_1_world_base_1a70149f5d06ab7cce560a1a26e2020c81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a70149f5d06ab7cce560a1a26e2020c81" kindref="member">SerializeAgentSet</ref>(std::ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:::START<sp/>agent_set\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>SerializeValue(os,<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>.size());</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[agent_id,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SerializeValue(os,<sp/>*agent_ptr);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:::END<sp/>agent_set\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="classcse491_1_1_world_base_1aa6c7b1fa955f624e73ef547e35e1c484" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1aa6c7b1fa955f624e73ef547e35e1c484" kindref="member">DeserializeAgentSet</ref>(std::istream<sp/>&amp;is,<sp/>netWorth::ClientManager<sp/>*manager)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>beginning<sp/>of<sp/>agent_set<sp/>serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>read;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(is,<sp/>read,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;:::START<sp/>agent_set&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>start<sp/>of<sp/>agent_set<sp/>serialization&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>client_id<sp/>=<sp/>manager-&gt;getClientID();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>all<sp/>agents<sp/>other<sp/>than<sp/>the<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>to_delete;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>[agent_id,<sp/>agent_ptr]<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_id<sp/>!=<sp/>client_id)<sp/>to_delete.push_back(agent_id);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>agent_id<sp/>:<sp/>to_delete)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a5ff2b46b4586824dee34f8487c9d74dc" kindref="member">RemoveAgent</ref>(agent_id);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>last_entity_id;<sp/>start<sp/>from<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>number<sp/>of<sp/>agents<sp/>saved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>server_last_entity_id<sp/>=<sp/>DeserializeAs&lt;size_t&gt;(is);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>client<sp/>id<sp/>NOT<sp/>in<sp/>agent<sp/>map<sp/>yet<sp/>if<sp/>ID<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>to<sp/>end<sp/>of<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(client_id<sp/>==<sp/>0)<sp/>client_id<sp/>=<sp/>server_last_entity_id;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>back<sp/>in<sp/>all<sp/>agents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>server_last_entity_id;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>check<sp/>to<sp/>see<sp/>if<sp/>we&apos;ve<sp/>hit<sp/>the<sp/>end<sp/>of<sp/>the<sp/>agent_set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>are<sp/>looking<sp/>at<sp/>last<sp/>entity<sp/>id<sp/>(and<sp/>not<sp/>total<sp/>size),<sp/>we<sp/>may<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>gaps<sp/>in<sp/>our<sp/>agent_set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tmp_pos<sp/>=<sp/>is.tellg();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::getline(is,<sp/>read,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(read<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;:::END<sp/>agent_set&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref><sp/>&lt;<sp/>client_id)<sp/><ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref><sp/>=<sp/>client_id;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>is.seekg(tmp_pos);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>agent_ptr<sp/>=<sp/>std::make_unique&lt;netWorth::ControlledAgent&gt;(0,<sp/></highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DeserializeValue(is,<sp/>*agent_ptr);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>agent_ptr-&gt;SetProperty(</highlight><highlight class="stringliteral">&quot;manager&quot;</highlight><highlight class="normal">,<sp/>manager);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_ptr-&gt;GetID()<sp/>&gt;=<sp/><ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref>)<sp/><ref refid="classcse491_1_1_world_base_1aae1fdd9363fb4d53065373424d62dab7" kindref="member">last_entity_id</ref><sp/>=<sp/>agent_ptr-&gt;GetID();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>agent<sp/>is<sp/>the<sp/>client<sp/>interface,<sp/>skip<sp/>it<sp/>(we<sp/>already<sp/>have<sp/>it).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent_ptr-&gt;GetID()<sp/>==<sp/>client_id)<sp/>{<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1ae523f1072b65729dcfbad2f08fc0c0e5" kindref="member">AddConfiguredAgent</ref>(std::move(agent_ptr));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>end<sp/>of<sp/>agent_set<sp/>deserialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(is,<sp/>read,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;:::END<sp/>agent_set&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>end<sp/>of<sp/>agent_set<sp/>serialization&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classcse491_1_1_world_base_1a45cf369c1132ca8aa451279437cf9f85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a45cf369c1132ca8aa451279437cf9f85" kindref="member">SerializeItemSet</ref>(std::ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:::START<sp/>item_set\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>SerializeValue(os,<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>.size());</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;item<sp/>:<sp/><ref refid="classcse491_1_1_world_base_1a0680afbd405c53d1efd6ab809f154a74" kindref="member">item_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item.second-&gt;Serialize(os);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:::END<sp/>item_set\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="classcse491_1_1_world_base_1af9f0121290ca2d87ba7ce2c530e0f9ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1af9f0121290ca2d87ba7ce2c530e0f9ff" kindref="member">DeserializeItemSet</ref>(std::istream<sp/>&amp;is)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>beginning<sp/>of<sp/>item_set<sp/>serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>read;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(is,<sp/>read,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;:::START<sp/>item_set&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>start<sp/>of<sp/>item_set<sp/>serialization&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>items?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>DeserializeValue(is,<sp/>size);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>each<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>std::make_unique&lt;ItemBase&gt;(<ref refid="classcse491_1_1_world_base_1aef2de0a701d8d45f43298cccf409058f" kindref="member">agent_map</ref>.size()<sp/>+<sp/>i,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DeserializeValue(is,<sp/>*item);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1abc0be5fcd4b2ad17b9ca8ada6274a6f6" kindref="member">AddItem</ref>(std::move(item));</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>end<sp/>of<sp/>item_set<sp/>serialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>std::getline(is,<sp/>read,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;:::END<sp/>item_set&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>end<sp/>of<sp/>item_set<sp/>serialization&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="classcse491_1_1_world_base_1a9ef759ae08e89bdcafbb563f9b8a5f02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1a9ef759ae08e89bdcafbb563f9b8a5f02" kindref="member">Serialize</ref>(std::ostream<sp/>&amp;os)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>.<ref refid="classcse491_1_1_core_object_1aa982c181e7930dea73f17d60b9b3626d" kindref="member">Serialize</ref>(os);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a70149f5d06ab7cce560a1a26e2020c81" kindref="member">SerializeAgentSet</ref>(os);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a45cf369c1132ca8aa451279437cf9f85" kindref="member">SerializeItemSet</ref>(os);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="classcse491_1_1_world_base_1af3e5cf3b31fddc8febb3ff6c0758e9ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcse491_1_1_world_base_1af3e5cf3b31fddc8febb3ff6c0758e9ab" kindref="member">Deserialize</ref>(std::istream<sp/>&amp;is,<sp/>netWorth::ClientManager<sp/>*manager)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1a4d04b7b9f65f0b7470b3bfe540ec0479" kindref="member">main_grid</ref>.<ref refid="classcse491_1_1_core_object_1a8cf9c00434993fbe4c5ef7d542fd857c" kindref="member">Deserialize</ref>(is);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1aa6c7b1fa955f624e73ef547e35e1c484" kindref="member">DeserializeAgentSet</ref>(is,<sp/>manager);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcse491_1_1_world_base_1af9f0121290ca2d87ba7ce2c530e0f9ff" kindref="member">DeserializeItemSet</ref>(is);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Needs<sp/>access<sp/>to<sp/>most<sp/>things<sp/>here<sp/>so<sp/>this<sp/>is<sp/>easiest<sp/>way<sp/>to<sp/>do<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>worldlang::ProgramExecutor;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">};</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>namespace<sp/>cse491</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="source/core/WorldBase.hpp"/>
  </compounddef>
</doxygen>
