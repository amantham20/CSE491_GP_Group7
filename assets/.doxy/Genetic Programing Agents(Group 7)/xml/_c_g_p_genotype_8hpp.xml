<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_c_g_p_genotype_8hpp" kind="file" language="C++">
    <compoundname>CGPGenotype.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">bitset</includes>
    <includes local="no">cassert</includes>
    <includes local="no">functional</includes>
    <includes local="no">iostream</includes>
    <includes local="no">random</includes>
    <includes local="no">ranges</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">../../core/WorldBase.hpp</includes>
    <includes refid="_g_p_agent_base_8hpp" local="yes">GPAgentBase.hpp</includes>
    <includes refid="_graph_node_8hpp" local="yes">GraphNode.hpp</includes>
    <includedby refid="_graph_builder_8hpp" local="yes">source/Agents/GP/GraphBuilder.hpp</includedby>
    <incdepgraph>
      <node id="17">
        <label>../../core/AgentBase.hpp</label>
      </node>
      <node id="12">
        <label>../../core/WorldBase.hpp</label>
      </node>
      <node id="27">
        <label>../../core/WorldGrid.hpp</label>
      </node>
      <node id="25">
        <label>../AgentLibary.hpp</label>
      </node>
      <node id="1">
        <label>source/Agents/GP/CGPGenotype.hpp</label>
        <link refid="_c_g_p_genotype_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>GPAgentBase.hpp</label>
        <link refid="_g_p_agent_base_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>GPAgentSensors.hpp</label>
        <link refid="_g_p_agent_sensors_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>GraphNode.hpp</label>
        <link refid="_graph_node_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="3">
        <label>bitset</label>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="19">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>execution</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="21">
        <label>limits</label>
      </node>
      <node id="22">
        <label>memory</label>
      </node>
      <node id="23">
        <label>numeric</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="7">
        <label>random</label>
      </node>
      <node id="8">
        <label>ranges</label>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="16">
        <label>tinyxml2.h</label>
      </node>
      <node id="15">
        <label>unordered_map</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>source/Agents/GP/CGPAgent.hpp</label>
        <link refid="_c_g_p_agent_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>source/Agents/GP/CGPGenotype.hpp</label>
        <link refid="_c_g_p_genotype_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>source/Agents/GP/GPTrainingLoop.hpp</label>
        <link refid="_g_p_training_loop_8hpp_source"/>
      </node>
      <node id="2">
        <label>source/Agents/GP/GraphBuilder.hpp</label>
        <link refid="_graph_builder_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcowboys_1_1_c_g_p_node_gene" prot="public">cowboys::CGPNodeGene</innerclass>
    <innerclass refid="structcowboys_1_1_c_g_p_parameters" prot="public">cowboys::CGPParameters</innerclass>
    <innerclass refid="classcowboys_1_1_c_g_p_genotype" prot="public">cowboys::CGPGenotype</innerclass>
    <innernamespace refid="namespacecowboys">cowboys</innernamespace>
    <innernamespace refid="namespacecowboys_1_1base64">cowboys::base64</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bitset&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../core/WorldBase.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GPAgentBase.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GraphNode.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecowboys" kindref="compound">cowboys</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23" refid="namespacecowboys_1a7ff10c9167568e43db986d758a9c776d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacecowboys_1a7ff10c9167568e43db986d758a9c776d" kindref="member">HEADER_END</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25" refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27" refid="namespacecowboys_1a687dc901abd692180466f653935cb8f8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacecowboys_1a687dc901abd692180466f653935cb8f8" kindref="member">NODE_SEP</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacecowboys_1_1base64" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">base64<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>CHARS[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MAX_CHAR<sp/>=<sp/>*std::max_element(CHARS,<sp/>CHARS<sp/>+<sp/>64);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::array&lt;size_t,<sp/>MAX_CHAR<sp/>+<sp/>1&gt;<sp/>CHAR_TO_IDX<sp/>=<sp/>[]()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>MAX_CHAR<sp/>+<sp/>1&gt;<sp/>indices{};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>64;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[CHARS[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>ULLToB64(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ull)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ull<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Range<sp/>of<sp/>numbers<sp/>represented<sp/>by<sp/>n<sp/>digits<sp/>of<sp/>base<sp/>b<sp/>excluding<sp/>0:<sp/>b^(n-1)<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>b^n<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-&gt;<sp/>n-1<sp/>&lt;=<sp/>log_b(x)<sp/>-&gt;<sp/>n-1<sp/>=<sp/>floor(log_b(x))<sp/>-&gt;<sp/>n<sp/>=<sp/>1<sp/>+<sp/>floor(log_b(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Or<sp/>x<sp/>+<sp/>1<sp/>&lt;=<sp/>b^n<sp/>-&gt;<sp/>log_b(x<sp/>+<sp/>1)<sp/>&lt;=<sp/>n<sp/>-&gt;<sp/>ceil(log_b(x<sp/>+<sp/>1))<sp/>=<sp/>n;<sp/>But<sp/>this<sp/>can<sp/>cause<sp/>an<sp/>overflow<sp/>when<sp/>adding<sp/>1<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>max<sp/>value<sp/>of<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>1<sp/>+<sp/>std::floor(std::log(ull)<sp/>/<sp/>std::log(64));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result(n,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>ull<sp/>&gt;<sp/>0;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[n<sp/>-<sp/>1<sp/>-<sp/>i]<sp/>=<sp/>CHARS[ull<sp/>%<sp/>64];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ull<sp/>/=<sp/>64;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>B64ToULL(std::string<sp/>num_base64)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_base64.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>num_base64[i];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>coeff<sp/>=<sp/>std::pow(64,<sp/>num_base64.size()<sp/>-<sp/>i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>CHAR_TO_IDX[ch]<sp/>*<sp/>coeff;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>B2ToB64(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;binary)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2^6<sp/>=<sp/>64,<sp/>so<sp/>we<sp/>can<sp/>encode<sp/>6<sp/>bits<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>remainder<sp/>=<sp/>binary.size()<sp/>%<sp/>6;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remainder<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>the<sp/>binary<sp/>string<sp/>with<sp/>0s<sp/>to<sp/>make<sp/>it<sp/>divisible<sp/>by<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B2ToB64(std::string(6<sp/>-<sp/>remainder,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>+<sp/>binary);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.reserve(binary.size()<sp/>/<sp/>6);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_zeros<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>binary.size();<sp/>i<sp/>+=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>buffer<sp/>=<sp/>binary.substr(i,<sp/>6);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ull<sp/>=<sp/>std::bitset&lt;6&gt;(buffer).to_ulong();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>CHARS[ull];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ull<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_zeros<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all_zeros)<sp/></highlight><highlight class="comment">//<sp/>If<sp/>all<sp/>0s,<sp/>compress<sp/>to<sp/>1<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(1,<sp/>CHARS[0]);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>B64ToB2(std::string<sp/>base64)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>base64.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>base64[i];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ull<sp/>=<sp/>CHAR_TO_IDX[ch];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>std::bitset&lt;6&gt;(ull).to_string();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>leading<sp/>0s<sp/>and<sp/>return<sp/>result:<sp/>https://stackoverflow.com/a/31226728/13430191</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.erase(0,<sp/>std::min(result.find_first_not_of(CHARS[0]),<sp/>result.size()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>DoubleToB64(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>double_str<sp/>=<sp/>std::to_string(value);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>if<sp/>it<sp/>is<sp/>positive<sp/>or<sp/>negative<sp/>using<sp/>the<sp/>first<sp/>base64<sp/>character<sp/>or<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sign_b64<sp/>=<sp/>CHARS[0];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign_b64<sp/>=<sp/>CHARS[1];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>negative<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double_str.erase(0,<sp/>1);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decimal<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimal_loc<sp/>=<sp/>std::min(double_str.find(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">),<sp/>double_str.size());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>decimal<sp/>point<sp/>(does<sp/>nothing<sp/>if<sp/>decimal_loc<sp/>==<sp/>double_str.size())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>double_str.erase(decimal_loc,<sp/>1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Location<sp/>of<sp/>the<sp/>decimal<sp/>from<sp/>the<sp/>right<sp/>end<sp/>of<sp/>the<sp/>string,<sp/>so<sp/>that<sp/>leading<sp/>0s<sp/>that<sp/>are<sp/>dropped<sp/>can<sp/>be<sp/>recovered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimal_loc_from_right<sp/>=<sp/>double_str.size()<sp/>-<sp/>decimal_loc;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>decimal<sp/>location<sp/>using<sp/>1<sp/>base64<sp/>character<sp/>(arbitrary<sp/>choice,<sp/>assumes<sp/>decimal_loc<sp/>&lt;<sp/>64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>decimal_loc_b64<sp/>=<sp/>CHARS[decimal_loc_from_right];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>string<sp/>as<sp/>a<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ull<sp/>=<sp/>std::stoull(double_str);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>base64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ull_b64<sp/>=<sp/>ULLToB64(ull);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>decimal<sp/>location<sp/>and<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string({decimal_loc_b64,<sp/>sign_b64})<sp/>+<sp/>ull_b64;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>B64ToDouble(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;value)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(value.size()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>decimal<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimal_loc_from_right<sp/>=<sp/>CHAR_TO_IDX[value[0]];</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sign<sp/>=<sp/>value[1]<sp/>==<sp/>CHARS[0]<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ull<sp/>=<sp/>std::to_string(B64ToULL(value.substr(2)));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ull.size()<sp/>&lt;<sp/>decimal_loc_from_right)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ull<sp/>=<sp/>std::string(decimal_loc_from_right<sp/>-<sp/>ull.size()<sp/>+<sp/>1,<sp/>CHARS[0])<sp/>+<sp/>ull;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>decimal<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ull.insert(ull.size()<sp/>-<sp/>decimal_loc_from_right,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sign<sp/>*<sp/>std::stod(ull);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>base64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="structcowboys_1_1_c_g_p_node_gene" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>{</highlight></codeline>
<codeline lineno="175" refid="structcowboys_1_1_c_g_p_node_gene_1af8a73f702c6ea1fe80361221cbb99560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1af8a73f702c6ea1fe80361221cbb99560" kindref="member">input_connections</ref>{};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="structcowboys_1_1_c_g_p_node_gene_1aa9a3abbc8e9889d74f86caa136169735" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1aa9a3abbc8e9889d74f86caa136169735" kindref="member">function_idx</ref>{0};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref>{0};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structcowboys_1_1_c_g_p_node_gene_1a820e4416ca8f3216972e67cbeccc523f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1a820e4416ca8f3216972e67cbeccc523f" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1af8a73f702c6ea1fe80361221cbb99560" kindref="member">input_connections</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_node_gene_1af8a73f702c6ea1fe80361221cbb99560" kindref="member">input_connections</ref><sp/>&amp;&amp;<sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1aa9a3abbc8e9889d74f86caa136169735" kindref="member">function_idx</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_node_gene_1aa9a3abbc8e9889d74f86caa136169735" kindref="member">function_idx</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="structcowboys_1_1_c_g_p_parameters" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcowboys_1_1_c_g_p_parameters" kindref="compound">CGPParameters</ref><sp/>{</highlight></codeline>
<codeline lineno="195" refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>{0};</highlight></codeline>
<codeline lineno="197" refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>{0};</highlight></codeline>
<codeline lineno="199" refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref>{0};</highlight></codeline>
<codeline lineno="201" refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>{0};</highlight></codeline>
<codeline lineno="203" refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>{0};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcowboys_1_1_c_g_p_parameters" kindref="compound">CGPParameters</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="structcowboys_1_1_c_g_p_parameters_1a200507136f2ee8a0fec491a8ce23c85b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a200507136f2ee8a0fec491a8ce23c85b" kindref="member">CGPParameters</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>(<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>),<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>(<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>),<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref>(<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref>),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>(<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>),<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>(<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structcowboys_1_1_c_g_p_parameters_1af8242420c5a3fddf79fcf915bde9a2d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1af8242420c5a3fddf79fcf915bde9a2d4" kindref="member">GetFunctionalNodeCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>*<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>+<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structcowboys_1_1_c_g_p_parameters_1a6b7661b5f318ae5c151c7bf35f7570d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a6b7661b5f318ae5c151c7bf35f7570d1" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters" kindref="compound">CGPParameters</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref><sp/>&amp;&amp;<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>&amp;&amp;<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>&amp;&amp;<sp/><ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref><sp/>==<sp/>other.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classcowboys_1_1_c_g_p_genotype" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="230" refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcowboys_1_1_c_g_p_parameters" kindref="compound">CGPParameters</ref><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>EncodeHeader()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/>std::to_string(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/><ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/>std::to_string(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/><ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/>std::to_string(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/><ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/>std::to_string(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/><ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>+=<sp/>std::to_string(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecodeHeader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;header)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>header<sp/>and<sp/>save<sp/>to<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/>header_parts;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>comma_pos<sp/>=<sp/>header.find(<ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref>,<sp/>start_pos);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(comma_pos<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_parts.push_back(std::stoull(header.substr(start_pos,<sp/>comma_pos<sp/>-<sp/>start_pos)));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pos<sp/>=<sp/>comma_pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comma_pos<sp/>=<sp/>header.find(<ref refid="namespacecowboys_1a10b5af813611feaa70637e847db7e012" kindref="member">HEADER_SEP</ref>,<sp/>start_pos);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header_parts.push_back(std::stoull(header.substr(start_pos)));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header_parts.size()<sp/>!=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>message;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>genotype:<sp/>Header<sp/>should<sp/>have<sp/>5<sp/>parameters<sp/>but<sp/>found<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>+=<sp/>std::to_string(header_parts.size());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(message);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref><sp/>=<sp/>header_parts.at(0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>=<sp/>header_parts.at(1);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>=<sp/>header_parts.at(2);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>=<sp/>header_parts.at(3);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref><sp/>=<sp/>header_parts.at(4);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>EncodeGenotype()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>genotype<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CGPNodeGene<sp/>&amp;node<sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>Connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/>base64::B2ToB64(std::string(node.input_connections.cbegin(),<sp/>node.input_connections.cend()));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/><ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/>base64::ULLToB64(node.function_idx);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/><ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/>base64::DoubleToB64(node.default_output);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/><ref refid="namespacecowboys_1a687dc901abd692180466f653935cb8f8" kindref="member">NODE_SEP</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>genotype;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>EncodeGenotypeRaw()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>genotype<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CGPNodeGene<sp/>&amp;node<sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>Connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/>std::string(node.input_connections.cbegin(),<sp/>node.input_connections.cend());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/><ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/>std::to_string(node.function_idx);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/><ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/>std::to_string(node.default_output);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genotype<sp/>+=<sp/><ref refid="namespacecowboys_1a687dc901abd692180466f653935cb8f8" kindref="member">NODE_SEP</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>genotype;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecodeGenotype(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;genotype)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>node_gene_start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>node_gene_end<sp/>=<sp/>genotype.find(<ref refid="namespacecowboys_1a687dc901abd692180466f653935cb8f8" kindref="member">NODE_SEP</ref>,<sp/>node_gene_start);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>node_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node_gene_end<sp/>!=<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>node<sp/>gene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>node_gene<sp/>=<sp/>genotype.substr(node_gene_start,<sp/>node_gene_end<sp/>-<sp/>node_gene_start);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(node_idx<sp/>&lt;<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.size());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;current_node<sp/>=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>[node_idx];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>Connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sep_pos<sp/>=<sp/>node_gene.find(<ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sep_pos<sp/>!=<sp/>std::string::npos);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>input_connections_b64<sp/>=<sp/>node_gene.substr(0,<sp/>sep_pos);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>input_connections_b2<sp/>=<sp/>base64::B64ToB2(input_connections_b64);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;input_connections<sp/>=<sp/>current_node.input_connections;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>were<sp/>leading<sp/>bits<sp/>that<sp/>were<sp/>0<sp/>when<sp/>converted<sp/>to<sp/>base<sp/>64,<sp/>they<sp/>were<sp/>dropped.<sp/>Add<sp/>them<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>input_connections_str<sp/>=<sp/>std::string(input_connections.cbegin(),<sp/>input_connections.cend());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(input_connections.size()<sp/>&gt;=<sp/>input_connections_b2.size());<sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>genotype<sp/>if<sp/>this<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_connections_b2<sp/>=</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(input_connections.size()<sp/>-<sp/>input_connections_b2.size(),<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>+<sp/>input_connections_b2;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(input_connections.size()<sp/>==<sp/>input_connections_b2.size());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input_connections_b2.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_connections[i]<sp/>=<sp/>input_connections_b2[i];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_gene<sp/>=<sp/>node_gene.substr(sep_pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sep_pos<sp/>=<sp/>node_gene.find(<ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>function_idx_str<sp/>=<sp/>node_gene.substr(0,<sp/>std::min(sep_pos,<sp/>node_gene.size()));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_node.function_idx<sp/>=<sp/>base64::B64ToULL(function_idx_str);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_gene<sp/>=<sp/>node_gene.substr(sep_pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sep_pos<sp/>=<sp/>node_gene.find(<ref refid="namespacecowboys_1a91bdea709fcf1bdde06fc543bd9a3a06" kindref="member">NODE_GENE_SEP</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sep_pos<sp/>==<sp/>std::string::npos);<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>the<sp/>last<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>default_output_str<sp/>=<sp/>node_gene.substr(0,<sp/>std::min(sep_pos,<sp/>node_gene.size()));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_node.default_output<sp/>=<sp/>base64::B64ToDouble(default_output_str);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>to<sp/>next<sp/>node<sp/>gene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_gene_start<sp/>=<sp/>node_gene_end<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_gene_end<sp/>=<sp/>genotype.find(<ref refid="namespacecowboys_1a687dc901abd692180466f653935cb8f8" kindref="member">NODE_SEP</ref>,<sp/>node_gene_start);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++node_idx;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374" refid="classcowboys_1_1_c_g_p_genotype_1a5df9f2e75d2f7ce770fcbad8db181ca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a5df9f2e75d2f7ce770fcbad8db181ca0" kindref="member">CGPGenotype</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378" refid="classcowboys_1_1_c_g_p_genotype_1ac574555fb0b7df397ff1ba37472929ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1ac574555fb0b7df397ff1ba37472929ef" kindref="member">CGPGenotype</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters" kindref="compound">CGPParameters</ref><sp/>&amp;parameters)<sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>(parameters)<sp/>{<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a18df903b704d1afaaf45d7fdbd47d81e" kindref="member">InitGenotype</ref>();<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rule<sp/>of<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">~CGPGenotype</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384" refid="classcowboys_1_1_c_g_p_genotype_1a9a1d550ceb8b56cce0ba719a17a9c604" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a9a1d550ceb8b56cce0ba719a17a9c604" kindref="member">CGPGenotype</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;other)<sp/>{<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1af9dbed2d1811d07cf56b99852a54f2ce" kindref="member">Configure</ref>(other.<ref refid="classcowboys_1_1_c_g_p_genotype_1a1024751577eb89f4b010ce39069d8a47" kindref="member">Export</ref>());<sp/>}</highlight></codeline>
<codeline lineno="388" refid="classcowboys_1_1_c_g_p_genotype_1a5bde6c649e5cc3ad2746913effc9fe86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a5bde6c649e5cc3ad2746913effc9fe86" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1af9dbed2d1811d07cf56b99852a54f2ce" kindref="member">Configure</ref>(other.<ref refid="classcowboys_1_1_c_g_p_genotype_1a1024751577eb89f4b010ce39069d8a47" kindref="member">Export</ref>());</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394" refid="classcowboys_1_1_c_g_p_genotype_1a0394f31cfaf19e9f00e7fb787b8ec42b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a0394f31cfaf19e9f00e7fb787b8ec42b" kindref="member">CGPGenotype</ref>(<ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref><sp/>=<sp/>other.params;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref><sp/>=<sp/>std::move(other.nodes);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401" refid="classcowboys_1_1_c_g_p_genotype_1a4adaf752b0e7aaebcd11ab06064a4277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a4adaf752b0e7aaebcd11ab06064a4277" kindref="member">operator=</ref>(<ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref><sp/>=<sp/>other.params;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref><sp/>=<sp/>std::move(other.nodes);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classcowboys_1_1_c_g_p_genotype_1af9dbed2d1811d07cf56b99852a54f2ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1af9dbed2d1811d07cf56b99852a54f2ce" kindref="member">Configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;encoded_genotype)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Separate<sp/>header<sp/>and<sp/>genotype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newline_pos<sp/>=<sp/>encoded_genotype.find(<ref refid="namespacecowboys_1a7ff10c9167568e43db986d758a9c776d" kindref="member">HEADER_END</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newline_pos<sp/>==<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>genotype:<sp/>No<sp/>newline<sp/>character<sp/>found.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header<sp/>=<sp/>encoded_genotype.substr(0,<sp/>newline_pos);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>genotype<sp/>=<sp/>encoded_genotype.substr(newline_pos<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>header<sp/>and<sp/>save<sp/>to<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DecodeHeader(header);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>genotype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a18df903b704d1afaaf45d7fdbd47d81e" kindref="member">InitGenotype</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>genotype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DecodeGenotype(genotype);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>number<sp/>of<sp/>functional<sp/>nodes<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.size()<sp/>==<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af8242420c5a3fddf79fcf915bde9a2d4" kindref="member">GetFunctionalNodeCount</ref>());</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classcowboys_1_1_c_g_p_genotype_1a3d1aa5f490b8c4913b79c78f6ca59213" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;::iterator<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a3d1aa5f490b8c4913b79c78f6ca59213" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.begin();<sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classcowboys_1_1_c_g_p_genotype_1ad56e93e790afb1b76e790186640bb9b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;::iterator<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1ad56e93e790afb1b76e790186640bb9b6" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.end();<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="classcowboys_1_1_c_g_p_genotype_1a9c50d5bf20b767f5c1913b148041b0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;::const_iterator<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a9c50d5bf20b767f5c1913b148041b0d3" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.begin();<sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="classcowboys_1_1_c_g_p_genotype_1abf6dd69142b486bbcc9456cc6e713d5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;::const_iterator<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1abf6dd69142b486bbcc9456cc6e713d5e" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.end();<sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classcowboys_1_1_c_g_p_genotype_1abd09b1758395af0e0f89f8eec79d287e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;::const_iterator<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1abd09b1758395af0e0f89f8eec79d287e" kindref="member">cbegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.cbegin();<sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="classcowboys_1_1_c_g_p_genotype_1a839c84fbbed3d6f8fea3acdcd47ef33f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;::const_iterator<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a839c84fbbed3d6f8fea3acdcd47ef33f" kindref="member">cend</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.cend();<sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="classcowboys_1_1_c_g_p_genotype_1a65ca684573a0cd2c2e456f68d908ef9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a65ca684573a0cd2c2e456f68d908ef9e" kindref="member">GetNumPossibleConnections</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_connections<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;node<sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_connections<sp/>+=<sp/>node.input_connections.size();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_connections;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="classcowboys_1_1_c_g_p_genotype_1a0d7a363fa9936c7a0547716f5327fd12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a0d7a363fa9936c7a0547716f5327fd12" kindref="member">GetNumConnections</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_connections<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;node<sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>con<sp/>:<sp/>node.input_connections)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(con<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_connections;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_connections;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="classcowboys_1_1_c_g_p_genotype_1ac6e717d6ed85f7619841c7dcf033a9bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1ac6e717d6ed85f7619841c7dcf033a9bf" kindref="member">SetParameters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcowboys_1_1_c_g_p_parameters" kindref="compound">CGPParameters</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>)<sp/>{<sp/>this-&gt;params<sp/>=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>;<sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="classcowboys_1_1_c_g_p_genotype_1a8d8179a4a0703602a5d7dbb6e92eaf69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a8d8179a4a0703602a5d7dbb6e92eaf69" kindref="member">GetNumInputs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="classcowboys_1_1_c_g_p_genotype_1a604654b453ec291a503d62a0beb849d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a604654b453ec291a503d62a0beb849d3" kindref="member">GetNumOutputs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="classcowboys_1_1_c_g_p_genotype_1afdf8eb85585a798ad0e936bde884d87b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1afdf8eb85585a798ad0e936bde884d87b" kindref="member">GetNumLayers</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref>;<sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="classcowboys_1_1_c_g_p_genotype_1a0b3a441e91f5f16b4a118d49dddcd9b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a0b3a441e91f5f16b4a118d49dddcd9b3" kindref="member">GetNumNodesPerLayer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;<sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classcowboys_1_1_c_g_p_genotype_1a11a75865ba04a8164e1d90d62959b00e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a11a75865ba04a8164e1d90d62959b00e" kindref="member">GetLayersBack</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>;<sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classcowboys_1_1_c_g_p_genotype_1a8806fe37f66cd0f9d45e2ca424aa5d62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a8806fe37f66cd0f9d45e2ca424aa5d62" kindref="member">GetNumFunctionalNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="classcowboys_1_1_c_g_p_genotype_1a1d01b170dca42b9dae0493289eafe34a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a1d01b170dca42b9dae0493289eafe34a" kindref="member">HasInputConnections</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a3d1aa5f490b8c4913b79c78f6ca59213" kindref="member">begin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1ad56e93e790afb1b76e790186640bb9b6" kindref="member">end</ref>();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::any_of(it-&gt;input_connections.begin(),<sp/>it-&gt;input_connections.end(),<sp/>[](</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/>return<sp/>c<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal">;<sp/>}))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="classcowboys_1_1_c_g_p_genotype_1a18df903b704d1afaaf45d7fdbd47d81e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a18df903b704d1afaaf45d7fdbd47d81e" kindref="member">InitGenotype</ref>()<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>node<sp/>configurations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.clear();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>nodes<sp/>won&apos;t<sp/>have<sp/>any<sp/>inputs<sp/>and<sp/>no<sp/>function,<sp/>so<sp/>they<sp/>are<sp/>skipped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>at<sp/>1<sp/>to<sp/>account<sp/>for<sp/>the<sp/>input<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_size<sp/>=<sp/>i<sp/>==<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1<sp/>?<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>layer_size;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>up<sp/>possible<sp/>input<sp/>connections<sp/>from<sp/>each<sp/>layer<sp/>backwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>valid_layers_back<sp/>=<sp/>std::min(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_input_connections<sp/>=<sp/>valid_layers_back<sp/>*<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_input_connections<sp/>-=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_input_connections<sp/>+=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>node<sp/>gene<sp/>using<sp/>empty<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/>input_connections(num_input_connections,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>node<sp/>configuration.<sp/>With<sp/>default<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.push_back({input_connections});</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="classcowboys_1_1_c_g_p_genotype_1a1024751577eb89f4b010ce39069d8a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a1024751577eb89f4b010ce39069d8a47" kindref="member">Export</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header<sp/>=<sp/>EncodeHeader();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>genotype<sp/>=<sp/>EncodeGenotype();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header<sp/>+<sp/><ref refid="namespacecowboys_1a7ff10c9167568e43db986d758a9c776d" kindref="member">HEADER_END</ref><sp/>+<sp/>genotype;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="classcowboys_1_1_c_g_p_genotype_1a161263fcb0471ad6c5113cf83d74cde9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a161263fcb0471ad6c5113cf83d74cde9" kindref="member">ExportRaw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header<sp/>=<sp/>EncodeHeader();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>genotype<sp/>=<sp/>EncodeGenotypeRaw();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header<sp/>+<sp/><ref refid="namespacecowboys_1a7ff10c9167568e43db986d758a9c776d" kindref="member">HEADER_END</ref><sp/>+<sp/>genotype;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="classcowboys_1_1_c_g_p_genotype_1aba8c829d7540530029c818fa6612db1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1aba8c829d7540530029c818fa6612db1a" kindref="member">Mutate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation_rate,<sp/><ref refid="classcowboys_1_1_g_p_agent_base" kindref="compound">GPAgentBase</ref><sp/>&amp;agent,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(<ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;)&gt;<sp/>mutation)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(mutation_rate<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>mutation_rate<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;node<sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent.<ref refid="classcowboys_1_1_g_p_agent_base_1aae5aa0b4384c8fabd4cc2aaceea6e054" kindref="member">GetRandom</ref>()<sp/>&lt;<sp/>mutation_rate)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutation(node);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="classcowboys_1_1_c_g_p_genotype_1a8ef3ada80681bad5a75f3368585ec109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a8ef3ada80681bad5a75f3368585ec109" kindref="member">MutateConnections</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation_rate,<sp/><ref refid="classcowboys_1_1_g_p_agent_base" kindref="compound">GPAgentBase</ref><sp/>&amp;agent)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::uniform_int_distribution&lt;size_t&gt;<sp/>dist(0,<sp/>1);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1aba8c829d7540530029c818fa6612db1a" kindref="member">Mutate</ref>(mutation_rate,<sp/>agent,<sp/>[&amp;agent](<ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;node)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;con<sp/>:<sp/>node.<ref refid="structcowboys_1_1_c_g_p_node_gene_1af8a73f702c6ea1fe80361221cbb99560" kindref="member">input_connections</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con<sp/>=<sp/>agent.<ref refid="classcowboys_1_1_g_p_agent_base_1af36f73ce29a08f1a0643166cfbabc732" kindref="member">GetRandomULL</ref>(2)<sp/>==<sp/>0<sp/>?<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="classcowboys_1_1_c_g_p_genotype_1a8ccc2678ecaf5ce044fa731f6e870c21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a8ccc2678ecaf5ce044fa731f6e870c21" kindref="member">MutateFunctions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation_rate,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_functions,<sp/><ref refid="classcowboys_1_1_g_p_agent_base" kindref="compound">GPAgentBase</ref><sp/>&amp;agent)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1aba8c829d7540530029c818fa6612db1a" kindref="member">Mutate</ref>(mutation_rate,<sp/>agent,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[num_functions,<sp/>&amp;agent](<ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;node)<sp/>{<sp/>node.<ref refid="structcowboys_1_1_c_g_p_node_gene_1aa9a3abbc8e9889d74f86caa136169735" kindref="member">function_idx</ref><sp/>=<sp/>agent.<ref refid="classcowboys_1_1_g_p_agent_base_1af36f73ce29a08f1a0643166cfbabc732" kindref="member">GetRandomULL</ref>(num_functions);<sp/>});</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classcowboys_1_1_c_g_p_genotype_1a0aac9acb63860dce69c10a25fda8bf65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a0aac9acb63860dce69c10a25fda8bf65" kindref="member">MutateOutputs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation_rate,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>std,<sp/><ref refid="classcowboys_1_1_g_p_agent_base" kindref="compound">GPAgentBase</ref><sp/>&amp;agent,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>additive<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1aba8c829d7540530029c818fa6612db1a" kindref="member">Mutate</ref>(mutation_rate,<sp/>agent,<sp/>[mean,<sp/>std,<sp/>&amp;agent,<sp/>additive](<ref refid="structcowboys_1_1_c_g_p_node_gene" kindref="compound">CGPNodeGene</ref><sp/>&amp;node)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation<sp/>=<sp/>agent.<ref refid="classcowboys_1_1_g_p_agent_base_1a20860da23777f250442fa2121f1b865b" kindref="member">GetRandomNormal</ref>(mean,<sp/>std);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(additive)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.<ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref><sp/>+=<sp/>mutation;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clamp<sp/>to<sp/>prevent<sp/>overflow<sp/>during<sp/>genotype<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>std::numeric_limits&lt;double&gt;::lowest();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>random<sp/>double<sp/>in<sp/>stod(to_string(.))<sp/>to<sp/>reliably<sp/>export<sp/>and<sp/>import<sp/>genotype<sp/>from<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.<ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref><sp/>=<sp/>std::stod(std::to_string(std::clamp(node.<ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref>,<sp/>min,<sp/>max)));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.<ref refid="structcowboys_1_1_c_g_p_node_gene_1a57fd3fa01192edef2d40c82d9e48d83b" kindref="member">default_output</ref><sp/>=<sp/>std::stod(std::to_string(mutation));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="classcowboys_1_1_c_g_p_genotype_1ace626429909480f220a88ea4978db4e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1ace626429909480f220a88ea4978db4e0" kindref="member">MutateHeader</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation_rate,<sp/><ref refid="classcowboys_1_1_g_p_agent_base" kindref="compound">GPAgentBase</ref><sp/>&amp;agent)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>expand<sp/>the<sp/>genotype<sp/>in<sp/>a<sp/>way<sp/>so<sp/>that<sp/>the<sp/>behavior<sp/>is<sp/>preserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>mutate<sp/>number<sp/>of<sp/>inputs<sp/>and<sp/>outputs<sp/>to<sp/>adapt<sp/>to<sp/>changing<sp/>state<sp/>and<sp/>action<sp/>spaces,<sp/>but<sp/>not<sp/>doing<sp/>it<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mutate<sp/>layers<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent.<ref refid="classcowboys_1_1_g_p_agent_base_1aae5aa0b4384c8fabd4cc2aaceea6e054" kindref="member">GetRandom</ref>()<sp/>&lt;<sp/>mutation_rate)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>empty<sp/>connections<sp/>to<sp/>each<sp/>node<sp/>at<sp/>the<sp/>front</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>at<sp/>1<sp/>to<sp/>account<sp/>for<sp/>the<sp/>input<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_size<sp/>=<sp/>i<sp/>==<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1<sp/>?<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>layer_size;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>old<sp/>number<sp/>of<sp/>input<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;curr_connections<sp/>=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>[(i<sp/>-<sp/>1)<sp/>*<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>+<sp/>j].input_connections;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>old_num_input_connections<sp/>=<sp/>curr_connections.size();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>new<sp/>number<sp/>of<sp/>input<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>valid_layers_back<sp/>=<sp/>std::min(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_input_connections<sp/>=<sp/>valid_layers_back<sp/>*<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_input_connections<sp/>-=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_input_connections<sp/>+=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>empty<sp/>connections<sp/>to<sp/>the<sp/>front<sp/>of<sp/>the<sp/>vector<sp/>of<sp/>input<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_needed<sp/>=<sp/>num_input_connections<sp/>-<sp/>old_num_input_connections;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_needed<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>empty<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/>input_connections(num_needed,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>empty<sp/>connections<sp/>into<sp/>the<sp/>front<sp/>of<sp/>the<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_connections.insert(curr_connections.cbegin(),<sp/>input_connections.cbegin(),<sp/>input_connections.cend());</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mutate<sp/>number<sp/>of<sp/>nodes<sp/>in<sp/>each<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(agent.<ref refid="classcowboys_1_1_g_p_agent_base_1aae5aa0b4384c8fabd4cc2aaceea6e054" kindref="member">GetRandom</ref>()<sp/>&lt;<sp/>mutation_rate)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>node<sp/>to<sp/>each<sp/>middle<sp/>layer<sp/>and<sp/>update<sp/>connections<sp/>for<sp/>middle<sp/>and<sp/>output<sp/>layers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CGPNodeGene&gt;<sp/>new_nodes;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>nodes<sp/>in<sp/>this<sp/>layer<sp/>to<sp/>the<sp/>new<sp/>node<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_start<sp/>=<sp/>(i<sp/>-<sp/>1)<sp/>*<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_size<sp/>=<sp/>i<sp/>==<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1<sp/>?<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_end<sp/>=<sp/>layer_start<sp/>+<sp/>layer_size;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>valid_layers_back<sp/>=<sp/>std::min(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>number<sp/>of<sp/>connections<sp/>for<sp/>the<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_num_connections<sp/>=<sp/>valid_layers_back<sp/>*<sp/>(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_num_connections<sp/>-=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_num_connections<sp/>+=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_needed<sp/>=<sp/>new_num_connections<sp/>-<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>[layer_start].input_connections.size();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_nodes.insert(new_nodes.cend(),<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.cbegin()<sp/>+<sp/>layer_start,<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.cbegin()<sp/>+<sp/>layer_end);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>middle<sp/>layers,<sp/>add<sp/>a<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newNode<sp/>=<sp/>std::vector&lt;char&gt;(new_num_connections,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_nodes.push_back({newNode});</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>extra<sp/>connections<sp/>for<sp/>each<sp/>node<sp/>in<sp/>this<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>layer<sp/>doesn&apos;t<sp/>have<sp/>any<sp/>connections<sp/>to<sp/>add<sp/>because<sp/>the<sp/>input<sp/>layer<sp/>is<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_layer_start<sp/>=<sp/>(i<sp/>-<sp/>1)<sp/>*<sp/>(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>layer_size;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>empty<sp/>connection<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>layer<sp/>of<sp/>connections<sp/>in<sp/>the<sp/>valid<sp/>layers<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(new_layer_start<sp/>+<sp/>j<sp/>&lt;<sp/>new_nodes.size());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;connections<sp/>=<sp/>new_nodes[new_layer_start<sp/>+<sp/>j].input_connections;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>iterate<sp/>over<sp/>the<sp/>valid<sp/>layers<sp/>back<sp/>that<sp/>are<sp/>middle<sp/>layers,<sp/>not<sp/>including<sp/>the<sp/>input<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>num_needed;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>in<sp/>reverse<sp/>order<sp/>to<sp/>keep<sp/>indices<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>insert_pos<sp/>=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>*<sp/>(num_needed<sp/>-<sp/>k);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connections.insert(connections.cbegin()<sp/>+<sp/>insert_pos,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(*(connections.cbegin()<sp/>+<sp/>insert_pos)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref><sp/>=<sp/>std::move(new_nodes);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>everything<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.size()<sp/>==<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af8242420c5a3fddf79fcf915bde9a2d4" kindref="member">GetFunctionalNodeCount</ref>());</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_start<sp/>=<sp/>(i<sp/>-<sp/>1)<sp/>*<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>layer_size<sp/>=<sp/>i<sp/>==<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1ac209c1210685fd18fbf16ea2a786a0f1" kindref="member">num_layers</ref><sp/>+<sp/>1<sp/>?<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a015e1ca499af5944cb36d9085844512e" kindref="member">num_outputs</ref><sp/>:<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>valid_layers_back<sp/>=<sp/>std::min(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>layer_size;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>number<sp/>of<sp/>connections<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[maybe_unused]]<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_connections<sp/>=</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_layers_back<sp/>*<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a9cb41df8fee1e0899f5cf1cea433b020" kindref="member">layers_back</ref>)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_connections<sp/>-=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1a0ad46dfb626df44058fb9b298ea97c7a" kindref="member">num_nodes_per_layer</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_connections<sp/>+=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>.<ref refid="structcowboys_1_1_c_g_p_parameters_1af2622bb0eeaf803b11384c87c9db4c07" kindref="member">num_inputs</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>[layer_start<sp/>+<sp/>j].input_connections.size()<sp/>==<sp/>num_connections);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="classcowboys_1_1_c_g_p_genotype_1a556c8153ba820c50ea17d09d09c651b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1a556c8153ba820c50ea17d09d09c651b2" kindref="member">MutateDefault</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mutation_rate,<sp/><ref refid="classcowboys_1_1_g_p_agent_base" kindref="compound">GPAgentBase</ref><sp/>&amp;agent,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_functions<sp/>=<sp/>FUNCTION_SET.size())<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1ace626429909480f220a88ea4978db4e0" kindref="member">MutateHeader</ref>(mutation_rate,<sp/>agent);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a8ef3ada80681bad5a75f3368585ec109" kindref="member">MutateConnections</ref>(mutation_rate,<sp/>agent);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a8ccc2678ecaf5ce044fa731f6e870c21" kindref="member">MutateFunctions</ref>(mutation_rate,<sp/>num_functions,<sp/>agent);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a0aac9acb63860dce69c10a25fda8bf65" kindref="member">MutateOutputs</ref>(mutation_rate,<sp/>0,<sp/>1,<sp/>agent);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="classcowboys_1_1_c_g_p_genotype_1a8fc4ce597d3085ffd417f4f04759e722" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a8fc4ce597d3085ffd417f4f04759e722" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref><sp/>!=<sp/>other.<ref refid="classcowboys_1_1_c_g_p_genotype_1a56c9461f93209b3d5163cc376c555db5" kindref="member">params</ref>)<sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>CGPParameters<sp/>for<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.size()<sp/>!=<sp/>other.<ref refid="classcowboys_1_1_c_g_p_genotype_1a4744ee8d9a3994fcc5a54a27f1037eb2" kindref="member">nodes</ref>.size())<sp/></highlight><highlight class="comment">//<sp/>#<sp/>of<sp/>genes<sp/>should<sp/>be<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_same<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1abd09b1758395af0e0f89f8eec79d287e" kindref="member">cbegin</ref>(),<sp/>it2<sp/>=<sp/>other.<ref refid="classcowboys_1_1_c_g_p_genotype_1abd09b1758395af0e0f89f8eec79d287e" kindref="member">cbegin</ref>();<sp/>it<sp/>!=<sp/><ref refid="classcowboys_1_1_c_g_p_genotype_1a839c84fbbed3d6f8fea3acdcd47ef33f" kindref="member">cend</ref>();<sp/>++it,<sp/>++it2)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_same<sp/>=<sp/>all_same<sp/>&amp;&amp;<sp/>(*it<sp/>==<sp/>*it2);<sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>CGPNodeGenes<sp/>for<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>all_same;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="classcowboys_1_1_c_g_p_genotype_1ab3447e6218a2aca50a5760c9db89a264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classcowboys_1_1_c_g_p_genotype_1ab3447e6218a2aca50a5760c9db89a264" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcowboys_1_1_c_g_p_genotype" kindref="compound">CGPGenotype</ref><sp/>&amp;genotype)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>genotype.<ref refid="classcowboys_1_1_c_g_p_genotype_1a161263fcb0471ad6c5113cf83d74cde9" kindref="member">ExportRaw</ref>();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cowboys</highlight></codeline>
    </programlisting>
    <location file="source/Agents/GP/CGPGenotype.hpp"/>
  </compounddef>
</doxygen>
