<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcowboys_1_1_g_p_agent_registers" kind="class" language="C++" prot="public">
    <compoundname>cowboys::GPAgentRegisters</compoundname>
    <includes refid="_g_p_agents_registers_8hpp" local="no">GPAgentsRegisters.hpp</includes>
    <innerclass refid="classcowboys_1_1_g_p_agent_registers_1_1iterator" prot="public">cowboys::GPAgentRegisters::iterator</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcowboys_1_1_g_p_agent_registers_1a667cf955bea55f8587eed6896e5fae78" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; registers</definition>
        <argsstring></argsstring>
        <name>registers</name>
        <qualifiedname>cowboys::GPAgentRegisters::registers</qualifiedname>
        <briefdescription>
<para>Vector of registers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="19" column="15" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1acc6bc17a7ee9a55d10332e271e5edb4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GPAgentRegisters</definition>
        <argsstring>(int numRegisters=16)</argsstring>
        <name>GPAgentRegisters</name>
        <qualifiedname>cowboys::GPAgentRegisters::GPAgentRegisters</qualifiedname>
        <param>
          <type>int</type>
          <declname>numRegisters</declname>
          <defval>16</defval>
        </param>
        <briefdescription>
<para>Number of registers Default is 16. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="classcowboys_1_1_g_p_agent_registers" kindref="compound">GPAgentRegisters</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numRegisters</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="28" column="3" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1a5a15a304c2b5affadcf4beb6d9b776aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~GPAgentRegisters</definition>
        <argsstring>()=default</argsstring>
        <name>~GPAgentRegisters</name>
        <qualifiedname>cowboys::GPAgentRegisters::~GPAgentRegisters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor for <ref refid="classcowboys_1_1_g_p_agent_registers" kindref="compound">GPAgentRegisters</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="32" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1a84c90fd41aec5ffc1038597907a1f8a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool setRegister</definition>
        <argsstring>(size_t index, size_t value)</argsstring>
        <name>setRegister</name>
        <qualifiedname>cowboys::GPAgentRegisters::setRegister</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set the Register object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="40" column="8" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1a8231d33b6f6a847ea58eae75e3214d9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; size_t &gt;</type>
        <definition>std::optional&lt; size_t &gt; getRegister</definition>
        <argsstring>(size_t index)</argsstring>
        <name>getRegister</name>
        <qualifiedname>cowboys::GPAgentRegisters::getRegister</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the Register object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the register </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::optional&lt;size_t&gt; Returns the value of the register if it exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="56" column="17" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1a42c3fba43996bbf34970ec5ad897c17a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t getNumRegisters</definition>
        <argsstring>()</argsstring>
        <name>getNumRegisters</name>
        <qualifiedname>cowboys::GPAgentRegisters::getNumRegisters</qualifiedname>
        <briefdescription>
<para>Get the number of registers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>size of the registers </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="67" column="10" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1a0b6b70701c46e22849f0f363861351cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>cowboys::GPAgentRegisters::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="69" column="10" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1ad69bd11391be1a1dba5c8202259664f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcowboys_1_1_g_p_agent_registers_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>cowboys::GPAgentRegisters::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="127" column="12" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classcowboys_1_1_g_p_agent_registers_1acad38d52497a975bfb6f2f6acd76631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcowboys_1_1_g_p_agent_registers_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>cowboys::GPAgentRegisters::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="130" column="12" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class to hold the registers of the agent. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="source/Agents/GP/GPAgentsRegisters.hpp" line="16" column="1" bodyfile="source/Agents/GP/GPAgentsRegisters.hpp" bodystart="16" bodyend="131"/>
    <listofallmembers>
      <member refid="classcowboys_1_1_g_p_agent_registers_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>begin</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>end</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1a42c3fba43996bbf34970ec5ad897c17a" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>getNumRegisters</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1a8231d33b6f6a847ea58eae75e3214d9c" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>getRegister</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1acc6bc17a7ee9a55d10332e271e5edb4c" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>GPAgentRegisters</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1a667cf955bea55f8587eed6896e5fae78" prot="private" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>registers</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1a84c90fd41aec5ffc1038597907a1f8a2" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>setRegister</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1a0b6b70701c46e22849f0f363861351cd" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>size</name></member>
      <member refid="classcowboys_1_1_g_p_agent_registers_1a5a15a304c2b5affadcf4beb6d9b776aa" prot="public" virt="non-virtual"><scope>cowboys::GPAgentRegisters</scope><name>~GPAgentRegisters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
